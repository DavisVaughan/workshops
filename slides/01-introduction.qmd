---
title: "1 - Introduction"
subtitle: "Machine learning with tidymodels"
format:
  revealjs: 
    slide-number: true
    footer: <https://workshops.tidymodels.org>
    include-before-body: header.html
    theme: [default, tidymodels.scss]
knitr:
  opts_chunk: 
    echo: true
---

```{r}
#| include: false
#| file: setup.R
```

::: r-fit-text
Welcome!
:::

::: columns
::: {.column width="50%"}
### <i class="fa fa-wifi"></i>

Wi-Fi network name

`rstudio22`
:::

::: {.column width="50%"}
### <i class="fa fa-key"></i>

Wi-Fi password

`tidyverse22`
:::
:::

## Workshop policies {.smaller}

-   Identify the exits closest to you in case of emergency

-   Please review the rstudio::conf code of conduct, which applies to all workshops

-   CoC issues can be addressed three ways:

    -   **In person:** contact any rstudio::conf staff member or the conference registration desk
    -   **By email:** send a message to `conf@rstudio.com`
    -   **By phone:** call 844-448-1212

-   Please do not photograph people wearing red lanyards

-   A chill-out room is available for neurologically diverse attendees on TKTK

## Who are you?

-   You can use the magrittr `%>%` or base R `|>` pipe

-   You are familiar with functions from dplyr, tidyr, ggplot2

-   You have exposure to basic statistical concepts

-   You do **not** neeed intermediate or expert familiarity with modeling or ML

## Who are we?

::: columns
::: {.column width="50%"}
-   Hannah Frick
-   Emil Hvitfeldt
-   Max Kuhn
:::

::: {.column width="50%"}
-   Julia Silge
-   David Robinson
-   Davis Vaughan
:::
:::

## Who are we?

::: columns
::: {.column width="50%"}
-   Kelly Bodwin
-   Michael Chow
-   Pritam Dalal
-   Matt Dancho
-   Jon Harmon
:::

::: {.column width="50%"}
-   Mike Mahoney
-   Edgar Ruiz
-   Asmae Toumi
-   Qiushi Yan
:::
:::

. . .

Many thanks to Julie Jung, Alison Hill, and Desir√©e De Leon for their role in creating these materials!

## Asking for help

üÜò "I'm stuck"

‚ö†Ô∏è "I'm not stuck, but I need help on my computer"

üôã "I need help understanding something"

## Plan for this workshop

-   *Today:* your data budget, what makes a model, evaluating models

-   *Tomorrow:* tuning hyperparameters, feature engineering, case studies

-   Log in to RStudio Cloud üíª (or use your own computer)

-   Introduce yourself to your neighbors üëã

##  {.center}

### <i class="fa fa-cloud"></i>

### Go here and log in (free):

[bit.ly/tidymodels-workshop](http://bit.ly/tidymodels-workshop)

## What is machine learning? {background-image="https://imgs.xkcd.com/comics/machine_learning.png" background-size="500px"}

::: footer
<https://xkcd.com/1838/>
:::

## What is machine learning? {background-image="images/what_is_ml.jpg" background-size="800px"}

::: footer
Illustration credit: <https://vas3k.com/blog/machine_learning/>
:::

## What is machine learning? {background-image="images/ml_illustration.jpg" background-size="800px"}

::: footer
Illustration credit: <https://vas3k.com/blog/machine_learning/>
:::

## Your turn {transition="slide-in"}

![](images/parsnip-flagger.jpg){.absolute top="0" right="0" width="150" height="150"}

. . .

*How are statistics and machine learning related?*

*How are they similar? Different?*

```{r}
#| echo: false
countdown(minutes = 3)
```

::: notes
the "two cultures"

model first vs. data first

inference vs. prediction
:::

## What is tidymodels? `r hexes("tidymodels")`

```{r}
#| message: true
library(tidymodels)
```

##  {background-image="images/tm-org.png" background-size="1000px"}

## The whole game

In the back half of the class, we'll work on a hockey example where we try to predict if a shot was on goal or not.

Let's step through that process (spoilers!) to give you a high level view.

First, we start with a good amount of data (n = TODO).

How should we "spend" that data?

## Data Spending

::: columns
::: {.column width="50%"}
```{r whole-game-split}
#| echo = FALSE

knitr::include_graphics("images/whole-game-split.svg")
```
:::

::: {.column width="50%"}
show some graphic here or sample sizes
:::
:::

## A first model

::: columns
::: {.column width="50%"}
```{r whole-game-glmnet}
#| echo = FALSE

knitr::include_graphics("images/whole-game-glmnet.svg")
```
:::

::: {.column width="50%"}
Let's start with a simple model - regularized logistic regression.

There are a lot of predictors and aren't really sure what is important or not.
:::
:::

## What to do about player?

::: columns
::: {.column width="50%"}
One predictor, player (taking the shot), has a lot of possible values.

How do we deal with this?
:::

::: {.column width="50%"}
:::
:::

## What to do about location?

::: columns
::: {.column width="50%"}
The location of the shot can be summarized a lot of different ways
:::

::: {.column width="50%"}
:::
:::

## A heuristic process of model optimization

```{r model-opt}
#| echo = FALSE

knitr::include_graphics("images/model-optimization.svg")
```

## Incremental model tuning and feature engineering

::: columns
::: {.column width="50%"}
show some roc curves (animation)?
:::

::: {.column width="50%"}
:::
:::

## What about a non-linear model?

::: columns
::: {.column width="50%"}
```{r whole-game-trees}
#| echo = FALSE

knitr::include_graphics("images/whole-game-tree.svg")
```
:::

::: {.column width="50%"}
Next we tried simple classification trees
:::
:::

## Okay, let's big out the big guns

::: columns
::: {.column width="50%"}
```{r whole-game-boost}
#| echo = FALSE

knitr::include_graphics("images/whole-game-boost.svg")
```
:::

::: {.column width="50%"}
:::
:::

## Which is best?

::: columns
::: {.column width="50%"}
```{r whole-game-select}
#| echo = FALSE

knitr::include_graphics("images/whole-game-select.svg")
```
:::

::: {.column width="50%"}
:::
:::

## Did we do a good job?

::: columns
::: {.column width="50%"}
```{r whole-game-final}
#| echo = FALSE

knitr::include_graphics("images/whole-game-final.svg")
```
:::

::: {.column width="50%"}
:::
:::

## Let's install some packages

```{r}
#| eval: false
install.packages(c("tidymodels", "stacks", "rpart", 
                   "ranger", "vetiver", "rpart.plot"))
```
