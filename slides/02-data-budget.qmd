---
title: "2 - Your data budget"
subtitle: "Machine learning with tidymodels"
format:
  revealjs: 
    slide-number: true
    footer: <https://workshops.tidymodels.org>
    include-before-body: header.html
    theme: [default, tidymodels.scss]
knitr:
  opts_chunk: 
    echo: true
---

```{r}
#| include: false
#| file: setup.R
```

##  {background-image="https://media.giphy.com/media/13otmMzoPMnRYY/giphy-downsized-large.gif" background-size="800px"}

## Data on flights out of DCA

```{r}
## devtools::install_github("simonpcouch/dcflights21")
library(tidyverse)
library(dcflights21)
data(dcflights)
```

Type `?dcflights` to learn more about this dataset.

## Data on flights out of DCA

```{r}
glimpse(dcflights)
```

## Data on flights out of DCA

-   N = 2702
-   a numeric outcome `dep_delay`
-   7 other variables, including `destination`, `hour`, and others

## 

```{r}
ggplot(dcflights, aes(dep_delay)) +
  geom_histogram(bins = 20)
```

## 

```{r}
ggplot(dcflights, aes(dep_delay)) +
  geom_histogram(bins = 20) +
  scale_x_continuous(trans = scales::pseudo_log_trans(base = 10))
```

## 

```{r}
ggplot(dcflights, aes(dep_delay, destination, fill = destination)) +
  geom_boxplot(alpha = 0.3, show.legend = FALSE)
```

## 

```{r}
dcflights %>%
  mutate(destination = fct_reorder(destination, dep_delay)) %>%
  ggplot(aes(dep_delay, destination, fill = destination)) +
  geom_boxplot(alpha = 0.3, show.legend = FALSE) +
  scale_x_continuous(trans = scales::pseudo_log_trans(base = 10))
```

## 

```{r}
#| fig.width: 6.8
#| fig.height: 5 
ggplot(dcflights, aes(hour, duration)) +
  stat_summary_hex(aes(z = dep_delay), alpha = 0.7, bins = 12) +
  scale_fill_viridis_c() +
  labs(fill = "mean delay")
```

## Think pair share {transition="slide-in"}

![](images/parsnip-flagger.jpg){.absolute top="0" right="0" width="150" height="150"}

*Explore the `dcflights` data on your own!*

```{r}
#| echo: false
countdown(minutes = 5)
```

::: notes
Make a plot or summary and then share with neighbor
:::

## 

::: r-fit-text
YOUR DATA BUDGET ðŸ’¸
:::

## Data splitting and spending

For machine learning, we typically split data into training and test sets:

. . .

-   The **training set** is used to estimate model parameters.
-   The **test set** is used to find an independent assessment of model performance.

. . .

Do not ðŸš« use the test set during training.

## 

::: r-fit-text
The more data we spend ðŸ¤‘
:::

::: r-fit-text
the better estimates we'll get.
:::

## Data splitting and spending

-   Spending too much data in training prevents us from a good assessment of predictive **performance**.

-   Spending too much in testing keeps us from finding a good estimate of model **parameters**.
